<<Ryan Kornitsky>>
HW2
Written Questions

Question 1.1)

base case) S(1) = 1 + 1 = 2
recursive case) S(N) = S(N/2) + S(N/2) + N/2 + 1

Question 1.2)

S(N) = S(N/2) + S(N/2) + N/2 + 1
S(N) = 2*S(N/2) + N/2 + 1

S(N/2) = 2*S(N/4) + N/4 + 1

S(N/4) = 2*S(N/8) + N/8 + 1

S(N) = 2*[2*[2*S(N/8) + N/8 + 1] + N/4 + 1]

S(N) = 2*[4*S(N/8) + N/4 + 2 + N/4 + 1]
S(N) = 2*[4*S(N/8) + N/2 + 3] + 1

S(N) = 8*S(N/8) + N + 7

..............another way to do it............

S(2^n) = 2*S(2^(n-1)) + 2^(n-1) + 1
S(2^n) = 2*[2*S(2^(n-2)) + 2^(n-2) + 1] + 2^(n-1) + 1
S(2^n) = 2*[2*[2*S(2^(n-3)) + 2^(n-3) + 1] + 2^(n-2) + 1] + 2^(n-1) + 1

S(2^n) = 2*[4*S(2^(n-2)) + 2^(n-2) + 2] + 2^(n-2) + 1] + 2^(n-1) + 1
S(2^n) = 2*[4*S(2^(n-2)) + 2*2^(n-2) + 3] + 2^(n-1) + 1
S(2^n) = 8*S(2^(n-3)) + 2*2^(n-1) + 6 + 2^(n-1) + 1
S(2^n) = 8*S(2^(n-3)) + 3*2^(n-1) + (4 + 2 + 1)

S(2^n) = (2^k)*S(2^(n-k)) + k*2^(n-k) + ((2^k) - 1)

S(N) = (N/2)*log(N) + 3N - 1